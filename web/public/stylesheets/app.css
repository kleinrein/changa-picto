/*! normalize.css v5.0.0 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Correct the line height in all browsers.
 * 3. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
/* Document
   ========================================================================== */
html {
  font-family: sans-serif;
  /* 1 */
  line-height: 1.15;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 3 */
  -webkit-text-size-adjust: 100%;
  /* 3 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block; }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0; }

/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block; }

/**
 * Add the correct display in IE.
 */
template {
  display: none; }

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none; }

html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after {
  content: "";
  content: none; }

q:before, q:after {
  content: "";
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

:root {
  font-family: 'Alegreya Sans', Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2E2E2E;
  font-size: 16px; }

h1 {
  font-size: 400%;
  letter-spacing: -2px; }

h2 {
  font-size: 250%;
  letter-spacing: -1px; }

h3 {
  font-size: 200%; }

h4 {
  font-size: 180%; }

h5 {
  font-size: 130%; }

h6 {
  font-size: 110%; }

.btn--default, .btn--purple, .btn--green {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none; }

.icons {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: row;
      flex-direction: row;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -ms-flex-pack: center;
      justify-content: center;
  margin-top: 4em;
  -ms-flex-align: center;
      align-items: center;
  margin: 4em 2em; }
  .icons .icon {
    background-color: #ffffff;
    border-radius: 50%;
    padding: 2rem;
    margin: 0 1em 2em 1em;
    box-shadow: 1px 1px 25px rgba(227, 227, 227, 0.2);
    display: -ms-flexbox;
    display: flex;
    -ms-flex-item-align: center;
        align-self: center;
    -ms-flex-pack: center;
        justify-content: center;
    -ms-flex-align: center;
        align-items: center;
    cursor: pointer;
    position: relative; }
    .icons .icon:hover:after {
      opacity: 1;
      -ms-transform: scale(1.05);
          transform: scale(1.05); }
    .icons .icon:after {
      background: linear-gradient(to bottom, #58FFB7 0%, #FFD36B 100%);
      opacity: 1;
      transition: all 75ms ease-in-out;
      content: "";
      width: 100%;
      height: 100%;
      margin: auto;
      position: absolute;
      border-radius: 50%;
      left: 0;
      right: 0;
      top: 0;
      bottom: 0;
      z-index: -1;
      display: -ms-flexbox;
      display: flex; }
  .icons .icon-title {
    display: none; }
  .icons .icon-img {
    max-width: 100%;
    display: block;
    height: 4em;
    margin: 0 auto;
    display: -ms-flexbox;
    display: flex;
    -webkit-backface-visibility: hidden;
    -webkit-perspective: 1000;
    -webkit-transform: translate3d(0, 0, 0);
    -webkit-transform: translateZ(0);
    backface-visibility: hidden;
    perspective: 1000;
    transform: translate3d(0, 0, 0);
    transform: translateZ(0); }

.input-search {
  background-color: #F8F8F8;
  border-radius: 15px;
  width: 32rem;
  height: 1.15rem;
  font-size: 1.25rem;
  font-weight: 300;
  outline: none;
  border: transparent;
  padding: 1em;
  margin-top: 6em;
  text-transform: uppercase;
  letter-spacing: 3px; }
  .input-search[placeholder] {
    text-align: center; }

.modal {
  position: fixed;
  width: 26rem;
  height: 28rem;
  padding: 2em;
  background-color: #fff;
  border-radius: 2em;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  margin: auto;
  box-shadow: 1px 2px 25px rgba(0, 0, 0, 0.5);
  z-index: 10;
  -ms-transform: translateY(-50px);
      transform: translateY(-50px);
  display: none; }
  .modal h2,
  .modal h3 {
    text-transform: uppercase;
    font-weight: 300; }
  .modal #modal-icon-title {
    margin-bottom: 0.25em;
    font-weight: 300; }
  .modal h5 {
    font-weight: 100; }
  .modal img {
    height: 14em;
    max-width: 100%;
    margin: 2em auto;
    display: block; }

.size-radios {
  overflow: hidden;
  border-radius: 8px;
  background: #F8F8F8;
  width: 19em;
  margin: 2em auto; }
  .size-radios li {
    float: left;
    list-style-type: none; }
  .size-radios input[type="radio"] {
    visibility: hidden;
    position: absolute; }
    .size-radios input[type="radio"]:checked + label {
      color: #fff;
      background: linear-gradient(#57FFB8, #FFD36B); }
  .size-radios label {
    display: block;
    padding: .5em .75em;
    margin: -1px 0;
    text-align: center;
    cursor: pointer;
    color: #C9C9C9;
    font-weight: 500;
    transition: all 100ms ease-in-out; }
    .size-radios label:hover {
      color: #A6A6A6; }

.size-radios-label {
  position: absolute;
  bottom: 1em;
  color: #C9C9C9;
  font-weight: 500; }

#modal-icon-img {
  width: 10em;
  max-height: 100%;
  margin: 0 auto;
  display: -ms-flexbox;
  display: flex; }

.overlay {
  background-color: rgba(0, 0, 0, 0.5);
  position: fixed;
  width: 100vw;
  height: 100vh;
  z-index: 5;
  display: none; }

.btn--default, .btn--purple, .btn--green {
  text-decoration: none;
  padding: 1em 1.25em;
  border: none;
  font-size: 1.25rem;
  border-radius: 10px;
  display: inline-block;
  position: relative;
  font-weight: 500;
  margin-top: 1.5em;
  background-color: #fff;
  color: #444;
  cursor: pointer;
  transition: background-color 600ms cubic-bezier(0, 0.97, 0.1, 1); }
  .btn--default:after, .btn--purple:after, .btn--green:after {
    transition: all 1s cubic-bezier(0, 0.97, 0.1, 1); }
  .btn--default:hover, .btn--purple:hover, .btn--green:hover {
    color: white;
    text-shadow: 2px 5px 10px rgba(0, 0, 0, 0.5);
    -ms-transform: scale(1.001);
        transform: scale(1.001); }
  .btn--default:hover:after, .btn--purple:hover:after, .btn--green:hover:after {
    transition: box-shadow 1s cubic-bezier(0, 0.97, 0.1, 1);
    opacity: 1; }
  .btn--default:active, .btn--purple:active, .btn--green:active {
    box-shadow: 0 0 0 0 transparent;
    transition: box-shadow 0.2s ease-in; }

.btn--purple {
  margin-right: 0.75em; }

.btn--green {
  margin-left: 0.75em; }

.btn--green:after, .btn--purple:after {
  content: " ";
  font-size: 1.25rem;
  position: absolute;
  border-radius: 10px;
  width: 100%;
  height: 100%;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  z-index: -1;
  -ms-transform: scale(1.1);
      transform: scale(1.1); }

.btn--green:hover {
  box-shadow: 0 10px 30px 0 #FFD36B;
  background: linear-gradient(#57FFB8, #FFD36B); }

.btn--green:hover:after {
  box-shadow: 0 10px 30px 0 #FFD36B; }

.btn--green:after {
  box-shadow: 0 0 0 0 transparent;
  background: linear-gradient(#57FFB8, #FFD36B); }

.btn--purple:hover {
  background: linear-gradient(#5994FF, #FF5AF1); }

.btn--purple:hover:after {
  box-shadow: 0 10px 30px 0 #FF5AF1; }

.btn--purple:after {
  box-shadow: 0 0 0 0 transparent;
  background: linear-gradient(#5994FF, #FF5AF1); }

body {
  background-color: #FDFDFD; }

.changa-picto-logo {
  max-width: 100%;
  height: 6em;
  margin: 0 auto;
  position: absolute;
  left: 0;
  right: 0;
  top: .5em; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
